<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
  <class name="com.krishagni.catissueplus.core.common.domain.ConfigSetting" table="OS_CFG_SETTINGS"
    entity-name="com.krishagni.catissueplus.core.common.domain.ConfigSetting">

    <id name="id" column="IDENTIFIER">
      <generator class="native">
        <param name="sequence">OS_CFG_SETTINGS_SEQ</param>
      </generator>
    </id>

    <many-to-one name="property" column="PROPERTY_ID" not-null="true" fetch="join"/>

    <property name="value" column="VALUE"/>

    <many-to-one name="activatedBy" column="ACTIVATED_BY" not-null="true"/>

    <property name="activationDate" column="ACTIVATION_DATE" not-null="true"/>

    <property name="activityStatus" column="ACTIVITY_STATUS" not-null="true"/>

    <query name="getAll">
      select 
        cs
      from
        com.krishagni.catissueplus.core.common.domain.ConfigSetting cs
        join cs.property prop
      where
        cs.activityStatus = 'Active' and
        prop.activityStatus = 'Active'
    </query>

    <query name="getAllByModule">
      select
        cs
      from
        com.krishagni.catissueplus.core.common.domain.ConfigSetting cs
        join cs.property prop 
        join prop.module module
      where
        cs.activityStatus = 'Active' and
        prop.activityStatus = 'Active' and
        module.name = :name
    </query>

    <query name="getAllLaterThan">
      select
        cs
      from
        com.krishagni.catissueplus.core.common.domain.ConfigSetting cs
        join cs.property prop
      where
        cs.activityStatus = 'Active' and
        prop.activityStatus = 'Active' and
        cs.id > :settingId
    </query>

    <query name="getAllPropertySettings">
      select
        cs
      from
        com.krishagni.catissueplus.core.common.domain.ConfigSetting cs
        join cs.property prop
        join prop.module module
      where
        module.name = :moduleName and
        prop.name = :propName and
        prop.activityStatus = 'Active'
      order by
        cs.id desc
    </query>
  </class>
</hibernate-mapping>
