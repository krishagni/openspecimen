<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <class name="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenList" table="CATISSUE_SPECIMENLIST_TAGS"
    entity-name="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenList">

    <id name="id" column="IDENTIFIER">
      <generator class="native">
        <param name="sequence">CATISSUE_SPECIMEN_LIST_SEQ</param>
      </generator>
    </id>

    <property name="name" column="TAG_LABEL"/>

    <property name="description" column="DESCRIPTION"/>

    <property name="createdOn" column="CREATED_ON"/>

    <property name="lastUpdatedOn" column="LAST_UPDATED_ON"/>

    <many-to-one name="owner" column="USER_ID"/>

    <property name="sendDigestNotifs" column="SEND_DIGEST_NOTIFS" />

    <property name="sourceEntityType" column="SOURCE_ENTITY_TYPE" />

    <property name="sourceEntityId" column="SOURCE_ENTITY_ID" />
     
    <set name="sharedWith" table="SHARED_SPECIMENLIST_TAGS">
      <key column="TAG_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.administrative.domain.User" column="USER_ID"/>
    </set>

    <set name="sharedWithGroups" table="OS_SPECIMEN_LIST_SHARED_GROUPS">
      <key column="LIST_ID"/>
      <many-to-many class="com.krishagni.catissueplus.core.administrative.domain.UserGroup" column="GROUP_ID">
        <filter name="activeEntity" condition="activity_status != 'Disabled'"/>
      </many-to-many>
    </set>

    <set name="folders" table="OS_CART_FOLDER_CARTS" inverse="true">
      <key column="CART_ID" />
      <many-to-many class="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenListsFolder" column="FOLDER_ID">
        <filter name="activeEntity" condition="activity_status != 'Disabled'"/>
      </many-to-many>
    </set>

    <set name="specimens" table="CATISSUE_SPEC_TAG_ITEMS" inverse="true">
      <key column="TAG_ID"/>
      <one-to-many class="com.krishagni.catissueplus.core.biospecimen.domain.SpecimenListItem"/>
    </set>
    
    <property name="deletedOn" column="DELETED_ON"/>

    <query name="getSpecimenListByName">
      from SpecimenList l where l.name = :name
    </query>
    
    <query name="getListSpecimensCount">
      select 
        l.id, count(s.id)
      from
        SpecimenList l
        join l.specimens li
        join li.specimen s
      where 
        l.id in (:listIds) and
        s.activityStatus != 'Disabled'
      group by
        l.id
    </query>

    <query name="getListCpSpecimens">
      select
        cp.id, s
      from
        SpecimenList l
        join l.specimens li
        join li.specimen s
        join s.visit v
        join v.registration cpr
        join cpr.collectionProtocol cp
      where
        l.id = :listId and
        l.deletedOn is null
    </query>

    <query name="getListSpecimensCpIds">
      select
        distinct cp.id
      from
        SpecimenList l
        join l.specimens li
        join li.specimen s
        join s.visit v
        join v.registration cpr
        join cpr.collectionProtocol cp
      where
        l.id = :listId and
        l.deletedOn is null
    </query>

    <sql-query name="sharedWithUser">
      <return-scalar column="listId" type="long"/>

      select
        l.identifier as listId
      from
        catissue_specimenlist_tags l
      where
        l.identifier in (:listIds) and
        (
          l.user_id = :userId or
          exists (
            select
              u.tag_id
            from
              shared_specimenlist_tags u
            where
              u.tag_id = l.identifier and
              u.user_id = :userId
          ) or
          exists (
            select
              lg.list_id
            from
              os_specimen_list_shared_groups lg
              inner join os_user_groups g on g.identifier = lg.group_id
              inner join os_user_group_users gu on gu.group_id = g.identifier
            where
              lg.list_id = l.identifier and
              g.activity_status != 'Disabled' and
              gu.user_id = :userId
          ) or
          exists (
            select
              c.cart_id
            from
              os_specimen_cart_folders f
              inner join os_cart_folder_carts c on c.folder_id = f.identifier
              inner join os_cart_folder_user_groups fg on fg.folder_id = f.identifier
              inner join os_user_groups g on g.identifier = fg.group_id
              inner join os_user_group_users gu on gu.group_id = g.identifier
            where
              f.activity_status != 'Disabled' and
              c.cart_id = l.identifier and
              g.activity_status != 'Disabled' and
              gu.user_id = :userId
          )
        )
    </sql-query>

    <sql-query name="addChildSpecimensMySQL">
      insert into
        catissue_spec_tag_items(tag_id, obj_id)
      select
        distinct e.tag_id, h.descendent_id
      from
        catissue_specimen_hierarchy h
        inner join catissue_spec_tag_items e on e.obj_id = h.ancestor_id
        left join catissue_spec_tag_items ne on ne.obj_id = h.descendent_id and ne.tag_id = e.tag_id
      where
        e.tag_id = :listId and
        ne.obj_id is null
    </sql-query>

    <sql-query name="addChildSpecimensOracle">
      insert into
        catissue_spec_tag_items(identifier, tag_id, obj_id)
      select
        os_spmn_cart_items_seq.nextval, t.tag_id, t.descendent_id
      from (
        select
          distinct e.tag_id, h.descendent_id
        from
          catissue_specimen_hierarchy h
          inner join catissue_spec_tag_items e on e.obj_id = h.ancestor_id
          left join catissue_spec_tag_items ne on ne.obj_id = h.descendent_id and ne.tag_id = e.tag_id
        where
          e.tag_id = :listId and
          ne.obj_id is null
      ) t
    </sql-query>

    <sql-query name="clearList">
      delete from catissue_spec_tag_items where tag_id = :listId
    </sql-query>

    <sql-query name="clearListItems">
      delete from catissue_spec_tag_items where tag_id = :listId and obj_id in (:specimenIds)
    </sql-query>

    <sql-query name="getDigestEnabledListIds">
      <return-scalar column="listId" type="long" />

      select
        list.identifier as listId
      from
        catissue_specimenlist_tags list
      where
        list.send_digest_notifs = 1 and
        list.deleted_on is null
      order by
        list.identifier asc
    </sql-query>

    <sql-query name="getListDigest">
      <return-scalar column="first_name" type="string" />
      <return-scalar column="last_name" type="string" />
      <return-scalar column="email_address" type="string" />
      <return-scalar column="short_title" type="string" />
      <return-scalar column="specimens" type="long" />

      <![CDATA[
      select
        usr.first_name, usr.last_name, usr.email_address,
        cp.short_title, count(item.identifier) as specimens
      from
        catissue_spec_tag_items item
        inner join catissue_user usr on usr.identifier = item.added_by
        inner join catissue_specimen spmn on spmn.identifier = item.obj_id
        inner join catissue_collection_protocol cp on cp.identifier = spmn.collection_protocol_id
      where
        item.tag_id = :listId and
        item.added_on >= :startTime and item.added_on < :endTime
      group by
        usr.first_name, usr.last_name, usr.email_address, cp.short_title
      ]]>
    </sql-query>
  </class>
</hibernate-mapping>
