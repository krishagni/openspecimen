<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
  "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
  "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false">
  <class name="com.krishagni.catissueplus.core.biospecimen.domain.SpecimensPickList" table="OS_SPECIMEN_PICK_LISTS" batch-size="100"
    entity-name="com.krishagni.catissueplus.core.biospecimen.domain.SpecimensPickList">

    <id name="id" column="IDENTIFIER" type="long">
      <generator class="native">
        <param name="sequence">OS_SPECIMEN_PICK_LISTS_SEQ</param>
      </generator>
    </id>

    <property name="name" column="NAME" not-null="true" />

    <many-to-one name="cart" column="CART_ID" not-null="true" fetch="join" />

    <property name="transferToBox" column="TRANSFER_TO_BOX" />

    <many-to-one name="creator" column="CREATOR_ID" not-null="true" fetch="join" />

    <property name="creationTime" column="CREATION_TIME" not-null="true" />

    <many-to-one name="updater" column="UPDATER_ID" fetch="join" />

    <property name="updateTime" column="UPDATE_TIME" />

    <set name="pickedSpecimens" table="OS_PICKED_SPECIMENS" batch-size="25">
      <key column="PICK_LIST_ID" />
      <one-to-many class="com.krishagni.catissueplus.core.biospecimen.domain.PickedSpecimen" />
    </set>

    <sql-query name="deletePickList">
      delete from os_specimen_pick_lists where identifier = :listId and cart_id = :cartId
    </sql-query>

    <sql-query name="getInactivePickLists">
      <return-scalar column="cartId" type="long" />
      <return-scalar column="pickListId" type="long" />
      <return-scalar column="lastUpdateTime" type="timestamp" />

      <![CDATA[
        select
          l.cart_id as cartId,
          l.identifier as pickListId,
          case when l.update_time is not null then l.update_time else l.creation_time end as lastUpdateTime
        from
          os_specimen_pick_lists l
        where
          (l.update_time is not null and l.update_time < :cutOffDate) or
          (l.update_time is null and l.creation_time < :cutOffDate)
        order by
          l.cart_id, l.identifier
      ]]>
    </sql-query>
  </class>
</hibernate-mapping>
